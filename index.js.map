{"version":3,"file":"index.js","sources":["src/tree2css.js","src/Node.js","src/json2tree.js","src/process.js","src/render.js"],"sourcesContent":["const tree2css = {\n\troot: (node) => node.nodes.map(\n\t\t(childNode) => tree2css[\n\t\t\tchildNode.type\n\t\t](childNode)\n\t).join(''),\n\tatrule: (node) => `@${ node.name } ${ node.params }{${ tree2css.root(node) }}`,\n\trule: (node) => `${ node.selector }{${ tree2css.root(node) }}`,\n\tdecl: (node) => `${ node.prop }:${ node.value };`\n};\n\nexport default tree2css;\n","// tooling\nimport tree2css from './tree2css';\n\nconst spliceDown = (node, offset, length, ...nodes) => {\n\tif (node.nodes) {\n\t\tnode.nodes.splice(\n\t\t\toffset,\n\t\t\tlength,\n\t\t\t...nodes\n\t\t);\n\t}\n\n\treturn node;\n};\n\nconst spliceUp = (node, offset, length, ...nodes) => {\n\tif (node.parent && node.parent.nodes) {\n\t\tnode.parent.nodes.splice(\n\t\t\tnode.parent.nodes.indexOf(node) + offset,\n\t\t\tlength,\n\t\t\t...nodes\n\t\t);\n\t}\n\n\treturn node;\n};\n\nclass Node {\n\tconstructor(changes) {\n\t\tObject.assign(this, changes);\n\t}\n\n\treplaceWith(...nodes) {\n\t\treturn spliceUp(this, 0, 1, ...nodes.map(\n\t\t\t(node) => spliceUp(node, 0, 1)\n\t\t));\n\t}\n\n\tbefore(...nodes) {\n\t\treturn spliceUp(this, -1, 0, ...nodes.map(\n\t\t\t(node) => spliceUp(node, 0, 1)\n\t\t));\n\t}\n\n\tafter(...nodes) {\n\t\treturn spliceUp(this, 1, 0, ...nodes.map(\n\t\t\t(node) => spliceUp(node, 0, 1)\n\t\t));\n\t}\n\n\tclone(changes) {\n\t\treturn Object.assign(new Node(), this, changes);\n\t}\n\n\tprepend(...nodes) {\n\t\treturn spliceDown(this, 0, 0, ...nodes.map(\n\t\t\t(node) => spliceUp(node, 0, 1)\n\t\t));\n\t}\n\n\tappend(...nodes) {\n\t\treturn spliceDown(this, this.nodes.length, 0, ...nodes.map(\n\t\t\t(node) => spliceUp(node, 0, 1)\n\t\t));\n\t}\n\n\tempty() {\n\t\treturn spliceDown(this, 0, this.nodes.length);\n\t}\n\n\twalk(fn) {\n\t\tif (this.nodes && this.nodes.length) {\n\t\t\tthis.nodes.every(\n\t\t\t\t(node) => {\n\t\t\t\t\tconst pass = fn(node) !== false;\n\n\t\t\t\t\tif (pass) {\n\t\t\t\t\t\tnode.walk(fn);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn pass;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\treturn tree2css[this.type](this);\n\t}\n}\n\nexport default Node;\n","import Node from './Node';\n\nconst array2tree = (nodes, parent) => nodes.map(\n\t(node) => json2tree[\n\t\tnode[0]\n\t](node, parent)\n);\n\nconst json2tree = [\n\t// root\n\t(part, parent) => new Node({\n\t\ttype: 'root',\n\t\tnodes: array2tree(\n\t\t\tpart.slice(1),\n\t\t\tparent\n\t\t)\n\t}),\n\n\t// at-rule\n\t(part, parent) => {\n\t\tconst node = new Node({\n\t\t\ttype:   'atrule',\n\t\t\tname:   part[1],\n\t\t\tparams: part[2],\n\t\t\tparent: parent\n\t\t});\n\n\t\tnode.nodes = array2tree(part.slice(3), node);\n\n\t\treturn node;\n\t},\n\n\t// rule\n\t(part, parent) => {\n\t\tconst node = new Node({\n\t\t\ttype:     'rule',\n\t\t\tselector: part[1],\n\t\t\tparent:   parent\n\t\t});\n\n\t\tnode.nodes = array2tree(part.slice(2), node);\n\n\t\treturn node;\n\t},\n\n\t// declaration\n\t(part, parent) => new Node({\n\t\ttype:   'decl',\n\t\tprop:   part[1],\n\t\tvalue:  part[2],\n\t\tparent: parent\n\t})\n];\n\nexport default json2tree;\n","// tooling\nimport json2tree from './json2tree';\n\nexport default (json, plugins) => {\n\tconst root = json2tree[json[0]](json);\n\n\tconst interceptionMap = {};\n\n\tif (plugins && plugins.length) {\n\t\tplugins.forEach(\n\t\t\t(plugin) => Object.keys(plugin).forEach(\n\t\t\t\t(key) => {\n\t\t\t\t\tif (interceptionMap[key]) {\n\t\t\t\t\t\tinterceptionMap[key].push(\n\t\t\t\t\t\t\tplugin[key]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinterceptionMap[key] = [\n\t\t\t\t\t\t\tplugin[key]\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t}\n\n\tconst promises = [];\n\n\troot.walk(\n\t\t(node) => interceptionMap[node.type] && interceptionMap[node.type].forEach(\n\t\t\t(interception) => {\n\t\t\t\tpromises.push(\n\t\t\t\t\tPromise.resolve(\n\t\t\t\t\t\tinterception(node)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t)\n\t);\n\n\treturn Promise.all(promises).then(\n\t\t() => root\n\t);\n};\n","import process from './process';\n\nexport default (json, plugins) => {\n\tconst promise = process(json, plugins);\n\n\tpromise.then(\n\t\t(css) => {\n\t\t\tconst style = document.createElement('style');\n\n\t\t\tstyle.appendChild(\n\t\t\t\tdocument.createTextNode(css)\n\t\t\t);\n\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\t);\n}\n"],"names":["tree2css","node","nodes","map","childNode","type","join","name","params","root","selector","prop","value","spliceDown","offset","length","splice","spliceUp","parent","indexOf","Node","changes","assign","this","Object","fn","every","pass","walk","array2tree","json2tree","part","slice","json","plugins","interceptionMap","forEach","plugin","keys","key","push","promises","interception","Promise","resolve","all","then","promise","process","css","style","document","createElement","appendChild","createTextNode","head"],"mappings":"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"}